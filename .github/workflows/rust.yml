name: CI

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        tls: ["default-tls", "rustls-tls"]
    steps:
    - uses: actions/checkout@v2

    - name: Install rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy
        override: true

    - name: Set build variables
      run: |
        # We use these variables as part of the cache keys.
        echo "RUST_VERSION=$(rustc --version)" >> $GITHUB_ENV
        echo "CARGO_VERSION=$(cargo --version)" >> $GITHUB_ENV

    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: cargo registry ${{ github.job }} ${{ runner.os }} ${{ env.RUST_VERSION }} ${{ env.CARGO_VERSION }} ${{ hashFiles('**/Cargo.toml') }}

    - name: Cache cargo build
      uses: actions/cache@v2
      with:
        path: target
        key: cargo build ${{ github.job }} ${{ runner.os }} ${{ env.RUST_VERSION }} ${{ env.CARGO_VERSION }} ${{ hashFiles('**/Cargo.toml') }}

    - name: Lint with rustfmt
      if: always()
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check

    - name: Lint with clippy
      if: always()
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all-targets --features build-binary,${{ matrix.tls }} -- -D warnings

    - name: Build
      if: always()
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --features build-binary,${{ matrix.tls }}

    - name: Run unit tests
      if: always()
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --lib --features build-binary,${{ matrix.tls }}

    - name: Run integration tests
      if: always()
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --test cli --features build-binary,${{ matrix.tls }}

    - name: Run doc tests
      if: always()
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --doc --all-features
