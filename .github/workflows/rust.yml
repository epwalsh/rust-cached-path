name: CI

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
  schedule:
    - cron: '0 10 * * *' # run at 10 AM UTC

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy
        override: true

    - name: Fix ~/.cargo directory permissions
      run: |
        # Need to chown ~/.cargo or else the "Cache cargo registry" step will fail.
        # See https://github.com/actions/cache/issues/133.
        sudo chown -R $(whoami):$(id -ng) ~/.cargo/

    - name: Set build variables
      run: |
        # We use these variables as part of the cache keys.
        echo "::set-env name=RUST_VERSION::$(rustc --version)"
        echo "::set-env name=CARGO_VERSION::$(cargo --version)"

    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: cargo registry ${{ github.job }} ${{ runner.os }} ${{ env.RUST_VERSION }} ${{ env.CARGO_VERSION }} ${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          cargo registry ${{ github.job }} ${{ runner.os }} ${{ env.RUST_VERSION }} ${{ env.CARGO_VERSION }}

    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: cargo build ${{ github.job }} ${{ runner.os }} ${{ env.RUST_VERSION }} ${{ env.CARGO_VERSION }} ${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          cargo build ${{ github.job }} ${{ runner.os }} ${{ env.RUST_VERSION }} ${{ env.CARGO_VERSION }}

    - name: Lint with rustfmt
      if: always()
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check

    - name: Lint with clippy
      if: always()
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all-targets --all-features -- -D warnings

    - name: Run unit tests
      if: always()
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --lib

    - name: Run doc tests
      if: always()
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --doc
